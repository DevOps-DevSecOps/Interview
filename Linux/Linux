(1) Explain Directory Structure for Linux ?
Directory Structure.jpg
[/ – Root]
Every single file and directory starts from the root directory.
Only root user has write privilege under this directory.
Please note that /root is root user’s home directory, which is not same as /.
[/bin – User Binaries]
Contains binary executables.
Common linux commands you need to use in single-user modes are located under this directory.
Commands used by all the users of the system are located here.
For example: ps, ls, ping, grep, cp.
[/sbin – System Binaries]
Just like /bin, /sbin also contains binary executables.
But, the linux commands located under this directory are used typically by system aministrator, for system maintenance purpose.
For example: iptables, reboot, fdisk, ifconfig, swapon
[/etc – Configuration Files]
Contains configuration files required by all programs.
This also contains startup and shutdown shell scripts used to start/stop individual programs.
For example: /etc/resolv.conf, /etc/logrotate.conf
[/dev – Device Files]
Contains device files.
These include terminal devices, usb, or any device attached to the system.
For example: /dev/tty1, /dev/usbmon0
[/proc – Process Information]
Contains information about system process.
This is a pseudo filesystem contains information about running process. For example: /proc/{pid} directory contains information about the process with that particular pid.
This is a virtual filesystem with text information about system resources. For example: /proc/uptime
[/var – Variable Files]
var stands for variable files.
Content of the files that are expected to grow can be found under this directory.
This includes — system log files (/var/log); packages and database files (/var/lib); emails (/var/mail); print queues (/var/spool); lock files (/var/lock); temp files needed across reboots (/var/tmp);
[/tmp – Temporary Files]
Directory that contains temporary files created by system and users.
Files under this directory are deleted when system is rebooted.
[/usr – User Programs]
Contains binaries, libraries, documentation, and source-code for second level programs.
/usr/bin contains binary files for user programs. If you can’t find a user binary under /bin, look under /usr/bin. For example: at, awk, cc, less, scp
/usr/sbin contains binary files for system administrators. If you can’t find a system binary under /sbin, look under /usr/sbin. For example: atd, cron, sshd, useradd, userdel
/usr/lib contains libraries for /usr/bin and /usr/sbin
/usr/local contains users programs that you install from source. For example, when you install apache from source, it goes under /usr/local/apache2
[/home – Home Directories]
Home directories for all users to store their personal files.
For example: /home/john, /home/nikita
[/boot – Boot Loader Files]
Contains boot loader related files.
Kernel initrd, vmlinux, grub files are located under /boot
For example: initrd.img-2.6.32-24-generic, vmlinuz-2.6.32-24-generic
[/lib – System Libraries]
Contains library files that supports the binaries located under /bin and /sbin
Library filenames are either ld* or lib*.so.*
For example: ld-2.11.1.so, libncurses.so.5.7
[/opt – Optional add-on Applications]
opt stands for optional.
Contains add-on applications from individual vendors.
add-on applications should be installed under either /opt/ or /opt/ sub-directory.
[/mnt – Mount Directory]
Temporary mount directory where sysadmins can mount filesystems.
[/media – Removable Media Devices]
Temporary mount directory for removable devices.
For examples, /media/cdrom for CD-ROM; /media/floppy for floppy drives; /media/cdrecorder for CD writer
[/srv – Service Data]
srv stands for service.
Contains server specific services related data.
For example, /srv/cvs contains CVS related data.

(2) What is the root user Home Directory ?

(3) Which Linux Distribution & Which Version you are using ?

(4) Which command to search the empty files, directories ?

(5) What is the difference between Absolute Path & Relative Path ?
Absolute Path: root directory & Relative Path: current working directory.

(6) what is the command to copy from one server to another server ?

(7) What was the command to get no of lines in a file ?
wc -l FILE_NAME

(8) I have shell script name FILE_NAME.sh when I execute. It gives “THIS IS FROM FILE_NAME.sh”, so now if I change file name to some other FILE_NAME.sh , I should get “THIS IS FROM NEW_FILE_NAME.sh” basically name of file changes my output should also change ?
$0
cat magic.sh
echo “This is from $0”
sh magic.sh
O/P:- This is from magic.sh
mv magic.sh script.sh
sh script.sh
O/P:- This is from script.sh

(9) What is $$, $?, $0, $*, $@, $#, $! in Shell Script ?
$$ - is the PID of the current shell. 
$? - the exit status of the last command executed. (0=success, 127=unsuccess)  
$0 - it set script file name inside a script.
$* - all the arguments are single double quoted. If a script receives two arguments, $* is equivalent to "$1 $2".
$@ - all the arguments are individually double quoted. If a script receives two arguments, $@ is equivalent to "$1" "$2".
$# - is a number of passed arguments to the script was executed.
$! - is the process ID of the last job run in the background (OR) most recent background command PID.

(10) How do find repeated words in files ?

(11) What is Host Key Checking ?

(12) What commands will use it for configuring ssh connectivity between 2 machines and What files will be presents in .ssh folder ?

(13) How to schedule a shell script in Linux ?

(14) What command to get load average ?

(15) What is exit status in Linux ?
means to check previous execution of command is success or not. Command: echo $? and the output will be 0 means success if it other numbers means failed.  

(16) How to check network utilization in Linux ?
iftop - used to check network bandwidth usage to get a quick overview of network activities on an interface. It displays network usage bandwidth updates every 2, 10 and 40 seconds on average.
# yum install epel-release  [On RHEL/CentOS]
# yum install iftop
# apt install iftop   [On Debian/Ubuntu]
nload - monitor the incoming and outgoing traffic separately.
# yum install epel-release  [On RHEL/CentOS]
# yum install nload
# apt install nload   [On Debian/Ubuntu]

(17) How to pass argument to a script ?
./script argument
Example: Script will show filename
./show.sh file1.txt
cat show.sh
#!/bin/bash
cat $1

(18) How to use argument in a script ?
First argument: $1,
Second argument : $2
Example : Script will copy file (arg1) to destination (arg2)
./copy.sh file1.txt /tmp/
cat copy.sh
#!/bin/bash
cp $1 $2

(19) What is She-bang ?
The sign #! is called she-bang and is written at top of the script. It passes instruction to program /bin/sh OR /bin/bash.

(20) How to get last line from a file ?
tail -1 FILE_NAME

(21) How to get first line from a file ?
head -1 FILE_NAME

(22) How to add string to string ?
V1="Hello"
V2="World"
let V3=$V1+$V2
echo $V3
Output
Hello+World

(23) How to add two integers ?
V1=1
V2=2
V3=$V1+$V2
echo $V3
Output
3

(24) How to get 10th line from the text file ?
head -10 FILE_NAME|tail -1

(25) How to run script in background ?
add "&" to the end of script

(26) How to print last 5 characters of variable ?
echo ${variable: -5}

(27) How to count local accounts ?
wc -l /etc/passwd|cut -d" " -f1 (OR) cat /etc/passwd|wc -l

(28) Which one is correct "export $variable" or "export variable" ?
export variable

(29) Write the command which will print numbers from 0 to 100 and display every third (0 3 6 9 …) ?
for i in {0..100..3}; do echo $i; done (OR) for (( i=0; i<=100; i=i+3 )); do echo "Welcome $i times"; done
